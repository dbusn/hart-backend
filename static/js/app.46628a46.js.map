{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/HART-logo.png","webpack:///./src/App.vue?8242","webpack:///./src/components/Navbar.vue?69e3","webpack:///./src/components/Navbar.vue","webpack:///./src/components/Navbar.vue?59c0","webpack:///./src/App.vue","webpack:///./src/App.vue?dfb6","webpack:///./src/components/Home.vue?76c6","webpack:///./src/components/Home.vue","webpack:///./src/components/Home.vue?0883","webpack:///./src/components/Documentation.vue?4610","webpack:///./src/resources.ts","webpack:///./src/backend.api.ts","webpack:///./src/components/Documentation.vue","webpack:///./src/components/Documentation.vue?68e1","webpack:///./src/components/Phonemes.vue?9c5f","webpack:///./src/helpers/array.helper.ts","webpack:///./src/helpers/logging.ts","webpack:///./src/components/Phonemes.vue","webpack:///./src/components/Phonemes.vue?6aa7","webpack:///./src/components/Words.vue?9f54","webpack:///./src/components/Words.vue","webpack:///./src/components/Words.vue?47d6","webpack:///./src/components/Audio.vue?2fd3","webpack:///./src/components/Audio.vue","webpack:///./src/components/Audio.vue?4d30","webpack:///./src/components/Settings.vue","webpack:///./src/helpers/darkmode.helper.ts","webpack:///./src/components/Settings.vue?d64c","webpack:///./src/router/router.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_withId","_hoisted_1","id","_hoisted_2","class","render","_ctx","_cache","$props","$setup","$data","$options","_component_Navbar","_component_router_view","default","_","_component_TabMenu","model","items","setup","label","icon","to","__exports__","components","Navbar","style","src","height","home_message","created","document","title","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_component_Button","_component_Dropdown","onClick","$event","check_motors","modelValue","selectedMotor","options","motors","optionLabel","placeholder","filter","check_specific_motor","ApiURL","backendApi","baseURL","handleApiResponse","res","status","config","method","url","handleApiErrorResponse","response","statusText","console","log","then","catch","post","body","file","formData","FormData","append","Blob","JSON","stringify","type","checkSpecificMotor","coord","checkMotors","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_component_Panel","_component_Checkbox","_component_Fieldset","header","dropdownPhoneme","phonemes","sendDropdownPhoneme","item","selectedTrainPhonemes","for","sendForcedIdentification","legend","toggleable","collapsed","sendRandomPhoneme","getRandom","arr","Array","len","taken","RangeError","x","Math","floor","random","firebaseConfig","apiKey","authDomain","projectId","db","sent","guess","Date","time","getTime","docRef","error","extends","Button","buttonDiv","getElementById","innerHTML","randomPhonemes","playedPhoneme","sendPhonemeMicrocontroller","fiRows","pTable","row","createElement","appendChild","textDiv","forEach","phoneme","div","display","marginRight","mount","btn","guessesCell","addEventListener","bgColor","background","log_activity","setTimeout","alert","randomPhoneme","json","raRows","insertCell","undefined","getPhonemes","phonemeData","pho","_hoisted_12","_component_AutoComplete","_component_InputText","selectedWord","dropdown","suggestions","filteredWords","onComplete","searchWord","field","addWord","removeWord","sendACWord","multiple","selectedWords","inputSentence","selectedLanguage","filteredLanguages","searchLanguage","sendSentence","index","words","findIndex","sendSentencesMicrocontroller","short","randomWords","map","w","playedWord","sendWordsMicrocontroller","word","event","languages","language","includes","query","_hoisted_13","ref","onChange","onFileSelected","selectedLanguage1","sendFile","startRecord","stopRecord","disabled","selectedLanguage2","sendRecording","recordStream","finalize","playMedia","blob","ctx","AudioContext","fileReader","FileReader","onload","decodeAudioData","buf","playbtn","onclick","source","createBufferSource","buffer","connect","destination","start","send_btn","readAsArrayBuffer","chunks","audio","mime","recorder","stop","stream","MediaRecorder","isTypeSupported","mimeType","ondataavailable","e","onstop","getTracks","navigator","mediaDevices","getUserMedia","toLowerCase","uploadedFile","target","files","sendAudioFile","source_language","target_language","darkThemeSwitch","stylesheets","styleSheets","themeChanger","methods","this","routes","path","component","Home","Documentation","Phonemes","Words","Audio","Settings","router","history","app","App","use","ripple"],"mappings":"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","file":"js/app.46628a46.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"img/HART-logo.37e960de.png\";","import { resolveComponent as _resolveComponent, createVNode as _createVNode, Suspense as _Suspense, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-3766f330\")\n\n_pushScopeId(\"data-v-3766f330\")\nconst _hoisted_1 = { id: \"app\" }\nconst _hoisted_2 = {\n  id: \"content\",\n  class: \"p-shadow-1\"\n}\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId((_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) => {\n  const _component_Navbar = _resolveComponent(\"Navbar\")\n  const _component_router_view = _resolveComponent(\"router-view\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_Navbar),\n    _createVNode(\"div\", _hoisted_2, [\n      (_openBlock(), _createBlock(_Suspense, null, {\n        default: _withId(() => [\n          _createVNode(_component_router_view)\n        ]),\n        _: 1\n      }))\n    ])\n  ]))\n})","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-225fd282\")\n\n_pushScopeId(\"data-v-225fd282\")\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"something else\")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId((_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) => {\n  const _component_TabMenu = _resolveComponent(\"TabMenu\")\n\n  return (_openBlock(), _createBlock(_component_TabMenu, { model: _ctx.items }, {\n    default: _withId(() => [\n      _hoisted_1\n    ]),\n    _: 1\n  }, 8, [\"model\"]))\n})","\r\n\r\nimport {defineComponent} from \"vue\";\r\n// import {ThemeChanger} from \"@/helpers/darkmode.helper\";\r\n\r\nexport default defineComponent({\r\n  name: 'Navbar',\r\n  setup() {\r\n    // const themeChanger = new ThemeChanger();\r\n\r\n    const items = [\r\n      {label: 'Home', icon: 'pi pi-fw piq-home', to: '/'},\r\n      {label: 'Documentation', icon: 'pi pi-fw pi-file', to: '/documentation'},\r\n      {label: 'Phonemes', icon: 'pi pi-fw pi-comment', to: '/phonemes'},\r\n      {label: 'Words', icon: 'pi pi-fw pi-comments', to: '/words'},\r\n      {label: 'Audio', icon: 'pi pi-fw pi-play', to: '/audio'},\r\n      // {label: 'Theme', icon: 'pi pi-fw pi-palette', command:() => {themeChanger.darkThemeSwitch()}}\r\n    ];\r\n\r\n    return {\r\n      items,\r\n    }\r\n  },\r\n})\r\n","import { render } from \"./Navbar.vue?vue&type=template&id=225fd282&scoped=true&ts=true\"\nimport script from \"./Navbar.vue?vue&type=script&lang=ts\"\nexport * from \"./Navbar.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\20174721\\\\Documents\\\\HART Software\\\\frontend\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-225fd282\"]])\n\nexport default __exports__","\r\nimport {defineComponent} from 'vue';\r\nimport Navbar from \"@/components/Navbar.vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'App',\r\n  components: {Navbar},\r\n});\r\n","import { render } from \"./App.vue?vue&type=template&id=3766f330&scoped=true&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\20174721\\\\Documents\\\\HART Software\\\\frontend\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3766f330\"]])\n\nexport default __exports__","import { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from './../assets/HART-logo.png'\n\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-41b22ef2\")\n\n_pushScopeId(\"data-v-41b22ef2\")\nconst _hoisted_1 = { style: {\"display\":\"flex\",\"justify-content\":\"center\",\"align-items\":\"center\",\"width\":\"100%\",\"height\":\"100%\"} }\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"div\", { style: {\"width\":\"400px\",\"height\":\"400px\"} }, [\n  /*#__PURE__*/_createVNode(\"img\", {\n    src: _imports_0,\n    height: \"400\"\n  })\n], -1)\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId((_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) => {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _hoisted_2\n  ]))\n})","\r\nimport {defineComponent} from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: 'Home',\r\n  setup() {\r\n    const home_message = \"Home Message!\"\r\n    return {\r\n      home_message,\r\n    }\r\n  },\r\n  created() {\r\n    document.title = \"HART Prototype\"\r\n  }\r\n})\r\n","import { render } from \"./Home.vue?vue&type=template&id=41b22ef2&scoped=true&ts=true\"\nimport script from \"./Home.vue?vue&type=script&lang=ts\"\nexport * from \"./Home.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\20174721\\\\Documents\\\\HART Software\\\\frontend\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-41b22ef2\"]])\n\nexport default __exports__","import { createVNode as _createVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-e63e25d6\")\n\n_pushScopeId(\"data-v-e63e25d6\")\nconst _hoisted_1 = { style: {\"width\":\"min(800px, 100%)\"} }\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"h1\", null, \"How to get started\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createVNode(\"p\", null, \"In the tab for phonemes, you can do everything related to phonemes! This includes viewing all the phonemes that are used, just training single phonemes, but also taking a test. In the tab 'Words', you can do similar stuff as in the phonemes tab, but then with words. In the 'Audio' tab, you can upload an audio file for processing.\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createVNode(\"p\", null, \"Before getting started, put on the sleeve and check whether all the motors work correctly!\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"Check all motors in order!\")\nconst _hoisted_6 = /*#__PURE__*/_createVNode(\"br\", null, null, -1)\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"Check specific motor\")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId((_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) => {\n  const _component_Button = _resolveComponent(\"Button\")\n  const _component_Dropdown = _resolveComponent(\"Dropdown\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    _createVNode(_component_Button, {\n      onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.check_motors()))\n    }, {\n      default: _withId(() => [\n        _hoisted_5\n      ]),\n      _: 1\n    }),\n    _hoisted_6,\n    _createVNode(_component_Dropdown, {\n      modelValue: _ctx.selectedMotor,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.selectedMotor = $event)),\n      options: _ctx.motors,\n      optionLabel: \"coord\",\n      placeholder: \"Select a motor\",\n      filter: true,\n      style: {\"margin-right\":\"10px\"}\n    }, null, 8, [\"modelValue\", \"options\"]),\n    _createVNode(_component_Button, {\n      onClick: _cache[3] || (_cache[3] = ($event: any) => (_ctx.check_specific_motor()))\n    }, {\n      default: _withId(() => [\n        _hoisted_7\n      ]),\n      _: 1\n    })\n  ]))\n})","// Define constants, interfaces, helper methods here\r\n\r\nexport const ApiURL = \"http://127.0.0.1:5000/\";\r\n","import Axios, {AxiosRequestConfig, AxiosResponse} from 'axios';\r\nimport {ApiURL} from \"./resources\";\r\n\r\n\r\n// AxiosInstance using the ApiURL from resources.\r\nconst backendApi = Axios.create({\r\n    baseURL: ApiURL\r\n})\r\n\r\n\r\n/**\r\n * Function for handling correctly returning API responses.\r\n */\r\nexport const handleApiResponse = ((res: AxiosResponse) => {\r\n\r\n    // Unpack API result\r\n    const {\r\n        status: status,\r\n        data: data,\r\n        config: {method, url}\r\n    } = res;\r\n\r\n\r\n    // Log if in dev mode\r\n    if (process.env.NODE_ENV === \"development\") {\r\n        console.log(`${method} ${url}`)\r\n        console.log(res)\r\n    }\r\n\r\n    // return data from call\r\n    return data\r\n})\r\n\r\n/**\r\n * Function for handling API responses containing an error.\r\n */\r\nexport const handleApiErrorResponse = (res: any) => {\r\n    // Unpack API result\r\n    const {\r\n        data: data,\r\n        status: status,\r\n        statusText: statusText\r\n    } = res.response\r\n\r\n    console.log(statusText + \" - \" + status + \": \" + data);\r\n}\r\n\r\n/**\r\n * Wrapper for communicating with teh backend.\r\n */\r\nexport default class APIWrapper {\r\n\r\n    /**\r\n     * Gets the available phonemes from the backend.\r\n     */\r\n    public static getPhonemes(): any {\r\n        return backendApi.get('/api/v1/phonemes')\r\n            .then(handleApiResponse)\r\n            .catch(handleApiErrorResponse);\r\n    }\r\n\r\n    /**\r\n     * Loops over and activates all motors in order.\r\n     */\r\n    public static checkMotors(): any {\r\n        return backendApi.post('/api/v1/check_motors')\r\n            .then(handleApiResponse)\r\n            .catch(handleApiErrorResponse);\r\n    }\r\n\r\n    public static checkSpecificMotor(body: any, config?: AxiosRequestConfig): any {\r\n        return backendApi.post('/api/v1/check_specific_motor', body, config)\r\n            .then(handleApiResponse)\r\n            .catch(handleApiErrorResponse)\r\n    }\r\n\r\n    /**\r\n     * Sends a phoneme to the microcontroller via the microcontroller/phonemes backend endpoint.\r\n     *\r\n     * @param body      JSON containing the phonemes to send (check backend endpoint for specification).\r\n     * @param config    (OPTIONAL) Axios config for configuring request.\r\n     */\r\n    public static async sendPhonemeMicrocontroller(body: any, config?: AxiosRequestConfig) {\r\n        return backendApi.post('/api/v1/microcontroller/phonemes', body, config)\r\n            .then(handleApiResponse)\r\n            .catch(handleApiErrorResponse);\r\n    }\r\n\r\n    /**\r\n     * Sends a list of words to the microcontroller via the microcontroller/words backend endpoint.\r\n     *\r\n     * @param body      JSON containing the phonemes to send (check backend endpoint for specification).\r\n     * @param config    (OPTIONAL) Axios config for configuring request.\r\n     */\r\n    public static async sendWordsMicrocontroller(body: any, config?: AxiosRequestConfig) {\r\n        return backendApi.post('/api/v1/microcontroller/words', body, config)\r\n            .then(handleApiResponse)\r\n            .catch(handleApiErrorResponse);\r\n    }\r\n\r\n    /**\r\n     * Sends a list of sentences to the microcontroller via the microcontroller/sentences backend endpoint.\r\n     *\r\n     * @param body      JSON containing the sentences to send (check backend endpoint for specification).\r\n     * @param config    (OPTIONAL) Axios config for configuring request.\r\n     */\r\n    public static async sendSentencesMicrocontroller(body: any, config?: AxiosRequestConfig) {\r\n        return backendApi.post('/api/v1/microcontroller/sentences', body, config)\r\n            .then(handleApiResponse)\r\n            .catch(handleApiErrorResponse);\r\n    }\r\n\r\n    /**\r\n     * Sends an audio file to the microcontroller via the microcontroller/audiofile backend endpoint.\r\n     *\r\n     * @param file      AudioFile to be send. Either in webm, ogg or flac format.\r\n     * @param body      Containing the source_language of speech in audio, target_language, and mime type of the audio.\r\n     * @param config    (OPTIONAL) Axios config for configuring request.\r\n     *\r\n     * See backend endpoint or more details.\r\n     */\r\n    public static async sendAudioFile(file: any,\r\n                                      body: {source_language: string, target_language: string, type: string},\r\n                                      config?: AxiosRequestConfig){\r\n        // Initialize multi-part form\r\n        const formData = new FormData();\r\n\r\n        // Append data to form\r\n        formData.append(\"file\", file);\r\n        formData.append('data', new Blob([JSON.stringify(body)], {\r\n            type: \"application/json\"\r\n        }));\r\n\r\n        // Send request to backend\r\n        return backendApi.post(\"/api/v1/microcontroller/audiofile\", formData)\r\n            .then(handleApiResponse)\r\n            .catch(handleApiErrorResponse);\r\n    }\r\n}\r\n","\r\nimport {defineComponent, ref} from \"vue\";\r\nimport APIWrapper from \"@/backend.api\";\r\n\r\nexport default defineComponent({\r\n  name: 'Documentation',\r\n  setup: async () => {\r\n    const selectedMotor = ref();\r\n    const motors = [\r\n      {coord: \"11\"},\r\n      {coord: \"12\"},\r\n      {coord: \"13\"},\r\n      {coord: \"14\"},\r\n      {coord: \"15\"},\r\n      {coord: \"16\"},\r\n      {coord: \"21\"},\r\n      {coord: \"22\"},\r\n      {coord: \"23\"},\r\n      {coord: \"24\"},\r\n      {coord: \"25\"},\r\n      {coord: \"26\"},\r\n      {coord: \"31\"},\r\n      {coord: \"32\"},\r\n      {coord: \"33\"},\r\n      {coord: \"34\"},\r\n      {coord: \"35\"},\r\n      {coord: \"36\"},\r\n      {coord: \"41\"},\r\n      {coord: \"42\"},\r\n      {coord: \"43\"},\r\n      {coord: \"44\"},\r\n      {coord: \"45\"},\r\n      {coord: \"46\"},\r\n    ]\r\n\r\n    function check_motors() {\r\n      APIWrapper.checkMotors();\r\n    }\r\n\r\n    function check_specific_motor() {\r\n      // console.log(selectedMotor.value.coord);\r\n      APIWrapper.checkSpecificMotor({'coord': selectedMotor.value.coord});\r\n    }\r\n\r\n    return {\r\n      check_motors,\r\n\r\n      selectedMotor,\r\n      motors,\r\n      check_specific_motor,\r\n    }\r\n  },\r\n  created() {\r\n    document.title = \"HART Prototype - Documentation\"\r\n  }\r\n})\r\n","import { render } from \"./Documentation.vue?vue&type=template&id=e63e25d6&scoped=true&ts=true\"\nimport script from \"./Documentation.vue?vue&type=script&lang=ts\"\nexport * from \"./Documentation.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\20174721\\\\Documents\\\\HART Software\\\\frontend\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e63e25d6\"]])\n\nexport default __exports__","import { createVNode as _createVNode, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-990813ba\")\n\n_pushScopeId(\"data-v-990813ba\")\nconst _hoisted_1 = /*#__PURE__*/_createVNode(\"h1\", null, \"Phonemes!\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"p\", null, \"To just try out how a single phoneme feels, and play it on the prototype, you can select a phoneme in the dropdown menu and send it to the arduino by clicking the button.\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Send phoneme!\")\nconst _hoisted_4 = /*#__PURE__*/_createVNode(\"p\", null, \"Select which phonemes you want to train on!\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createVNode(\"br\", null, null, -1)\nconst _hoisted_6 = /*#__PURE__*/_createVNode(\"p\", null, \"By clicking the button, a phoneme will be send to the arduino, and you will get to see three buttons, and have to choose which one you felt.\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"Forced identification!\")\nconst _hoisted_8 = /*#__PURE__*/_createVNode(\"div\", { id: \"forcedIdentificationButtons\" }, null, -1)\nconst _hoisted_9 = /*#__PURE__*/_createVNode(\"table\", { id: \"phoneme-table\" }, [\n  /*#__PURE__*/_createVNode(\"tr\", null, [\n    /*#__PURE__*/_createVNode(\"th\", null, \"Round\"),\n    /*#__PURE__*/_createVNode(\"th\", null, \"Correct answer\"),\n    /*#__PURE__*/_createVNode(\"th\", null, \"Guessed answers\")\n  ])\n], -1)\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"Send random phoneme!\")\nconst _hoisted_11 = /*#__PURE__*/_createVNode(\"table\", { id: \"random-phoneme-table\" }, [\n  /*#__PURE__*/_createVNode(\"tr\", null, [\n    /*#__PURE__*/_createVNode(\"th\", null, \"Round\"),\n    /*#__PURE__*/_createVNode(\"th\", null, \"Correct answer\")\n  ])\n], -1)\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId((_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) => {\n  const _component_Dropdown = _resolveComponent(\"Dropdown\")\n  const _component_Button = _resolveComponent(\"Button\")\n  const _component_Panel = _resolveComponent(\"Panel\")\n  const _component_Checkbox = _resolveComponent(\"Checkbox\")\n  const _component_Fieldset = _resolveComponent(\"Fieldset\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _hoisted_1,\n    _createVNode(_component_Panel, { header: \"Send a chosen phoneme\" }, {\n      default: _withId(() => [\n        _hoisted_2,\n        _createVNode(_component_Dropdown, {\n          modelValue: _ctx.dropdownPhoneme,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.dropdownPhoneme = $event)),\n          options: _ctx.phonemes,\n          optionLabel: \"name\",\n          placeholder: \"Phoneme\",\n          filter: true,\n          style: {\"margin-right\":\"10px\"}\n        }, null, 8, [\"modelValue\", \"options\"]),\n        _createVNode(_component_Button, {\n          onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.sendDropdownPhoneme())),\n          style: {\"padding\":\"1.2rem\"}\n        }, {\n          default: _withId(() => [\n            _hoisted_3\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_Panel, { header: \"Training\" }, {\n      default: _withId(() => [\n        _hoisted_4,\n        (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.phonemes, (item) => {\n          return (_openBlock(), _createBlock(\"div\", {\n            key: item.name,\n            class: \"p-field-checkbox\",\n            style: {\"display\":\"inline-block\",\"margin-right\":\"20px\"}\n          }, [\n            _createVNode(_component_Checkbox, {\n              id: 'checkbox_' + item.name,\n              name: \"item.nam3\",\n              value: item.name,\n              modelValue: _ctx.selectedTrainPhonemes,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => (_ctx.selectedTrainPhonemes = $event))\n            }, null, 8, [\"id\", \"value\", \"modelValue\"]),\n            _createVNode(\"label\", { for: item }, _toDisplayString(item.name), 9, [\"for\"])\n          ]))\n        }), 128)),\n        _hoisted_5,\n        _createVNode(_component_Panel, { header: \"Forced identification\" }, {\n          default: _withId(() => [\n            _hoisted_6,\n            _createVNode(_component_Button, {\n              onClick: _cache[4] || (_cache[4] = ($event: any) => (_ctx.sendForcedIdentification())),\n              style: {\"padding\":\"1.2rem\"}\n            }, {\n              default: _withId(() => [\n                _hoisted_7\n              ]),\n              _: 1\n            }),\n            _hoisted_8,\n            _createVNode(_component_Fieldset, {\n              legend: \"Answers (history)\",\n              toggleable: true,\n              collapsed: true\n            }, {\n              default: _withId(() => [\n                _hoisted_9\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_Panel, { header: \"Send random\" }, {\n          default: _withId(() => [\n            _createVNode(_component_Button, {\n              onClick: _cache[5] || (_cache[5] = ($event: any) => (_ctx.sendRandomPhoneme())),\n              style: {\"padding\":\"1.2rem\"}\n            }, {\n              default: _withId(() => [\n                _hoisted_10\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_Fieldset, {\n              legend: \"Answers (history)\",\n              toggleable: true,\n              collapsed: true\n            }, {\n              default: _withId(() => [\n                _hoisted_11\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n})","/**\r\n * Function that gets a random subset of length n from an array of objects.\r\n *\r\n * @param arr     The array of objects.\r\n * @param n       The number of objects to be returned.\r\n * @return [any]  Array of length n.\r\n */\r\nexport function getRandom(arr: [any], n: number): any {\r\n    let result: any[] = new Array(n),\r\n        len = arr.length,\r\n        taken = new Array(len);\r\n    if (n > len)\r\n        throw new RangeError(\"array.helper.getRandom: more elements taken than available.\");\r\n    while (n--) {\r\n        const x = Math.floor(Math.random() * len);\r\n        result[n] = arr[x in taken ? taken[x] : x];\r\n        taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n    return result;\r\n}\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAADUKI0VsiphL6ToyW_ASGl2TUB1hCD6o\",\r\n    authDomain: \"training-4fbe2.firebaseapp.com\",\r\n    projectId: \"training-4fbe2\",\r\n  };\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst db = getFirestore();\r\n\r\nexport default class ActivityLogger {\r\n\r\n    /*\r\n    Log the forcedidentifcation activity\r\n    */\r\n    public static async log_activity(type : string, sent: string, guess: string){\r\n        const d = new Date()\r\n        let res;\r\n\r\n        \r\n        if(sent == guess){\r\n            res = \"Correct\"\r\n        } else {\r\n            res = \"Incorrect\"\r\n        }\r\n        \r\n        try {\r\n            const docRef = await addDoc(collection(db, \"activity\"), {\r\n                type: type,\r\n                sent: sent,\r\n                guess: guess,\r\n                result: res,\r\n                time: d.getTime()\r\n            });\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n        } catch (e) {\r\n            console.error(\"Error adding document: \", e);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n","\r\nimport {createApp, defineComponent, ref} from \"vue\";\r\nimport APIWrapper from \"@/backend.api\";\r\nimport Button from \"primevue/button\";\r\nimport {getRandom} from \"@/helpers/array.helper\";\r\nimport ActivityLogger from \"@/helpers/logging\"\r\n\r\nexport default defineComponent({\r\n  name: 'Phonemes',\r\n  extends: {Button},\r\n\r\n  setup: async () => {\r\n\r\n    // Get phoneme data from the backend\r\n    const phonemeData = (await APIWrapper.getPhonemes()).phonemes;\r\n\r\n    // Initialize variables used throughout component\r\n    const selectedTrainPhonemes = ref([]);\r\n    const dropdownPhoneme = ref();\r\n    const fiRows = ref(0);\r\n    const raRows = ref(0);\r\n\r\n    /**\r\n     * Function for sending a phoneme from the dropdown menu.\r\n     */\r\n    function sendDropdownPhoneme() {\r\n      // Check if something was selected\r\n      if (dropdownPhoneme.value !== undefined) {\r\n        // Create json and send to backend\r\n        const json = {'phonemes': [dropdownPhoneme.value.name]}\r\n        APIWrapper.sendPhonemeMicrocontroller(json);\r\n      } else {\r\n        // If nothing selected, alert user\r\n        alert(\"Please select a phoneme to send\");\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function for sending random phoneme.\r\n     */\r\n    function sendRandomPhoneme() {\r\n      // If no phonemes were selected, alert user\r\n      if (selectedTrainPhonemes.value.length === 0) {\r\n        alert(\"Please select phonemes to train on\");\r\n      } else {\r\n        // Get random phoneme from selected phonemes and send it to the backend\r\n        const randomPhoneme = selectedTrainPhonemes.value[Math.floor(Math.random() * selectedTrainPhonemes.value.length)]\r\n        const json = {'phonemes': [randomPhoneme]};\r\n        APIWrapper.sendPhonemeMicrocontroller(json);\r\n\r\n        // Add answer to the table\r\n        const pTable = document.getElementById(\"random-phoneme-table\");\r\n        if (pTable === null) {return;}\r\n\r\n        const row = document.createElement(\"tr\");\r\n        raRows.value++;\r\n        row.insertCell()\r\n        row.innerHTML = \"<td>\" + raRows.value + \"</td><td>\" + randomPhoneme + \"</td>\";\r\n        pTable.appendChild(row);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function for executing forced identification behavior.\r\n     */\r\n    function sendForcedIdentification() {\r\n      // Get div from page for placing buttons\r\n      const buttonDiv = document.getElementById(\"forcedIdentificationButtons\")\r\n      if (buttonDiv === null) {\r\n        return;\r\n      }\r\n\r\n      // empty button div\r\n      buttonDiv.innerHTML = '';\r\n\r\n      // check if some phonemes are selected\r\n      if (selectedTrainPhonemes.value.length === 0) {\r\n        alert(\"Please select phonemes to train on\");\r\n        return;\r\n      }\r\n\r\n      // get a set of random phonemes from the selected phonemes\r\n      const randomPhonemes = (selectedTrainPhonemes.value as any)\r\n      const playedPhoneme: string = getRandom(randomPhonemes, 1)[0];\r\n\r\n      // Send selected phoneme to backend\r\n      APIWrapper.sendPhonemeMicrocontroller({'phonemes': [playedPhoneme]});\r\n\r\n      // Increase the number of forced identification rounds.\r\n      fiRows.value++;\r\n\r\n      // Get the answer table\r\n      const pTable = document.getElementById(\"phoneme-table\");\r\n      if (pTable === null) {\r\n        return\r\n      }\r\n\r\n      // Create new row element for table\r\n      const row = document.createElement(\"tr\");\r\n      row.innerHTML = \"<td>\" + fiRows.value + \"</td><td>\" + playedPhoneme + \"</td><td id='pTableRow_\" + fiRows.value + \"'></td>\";\r\n      pTable.appendChild(row);\r\n\r\n      // Add explanation div\r\n      const textDiv = document.createElement('div');\r\n      textDiv.innerHTML = '<p>Which phoneme was just played?</p>';\r\n      buttonDiv.appendChild(textDiv);\r\n\r\n      // For each of the phonemes selected, create buttons and assign listeners to it.\r\n      randomPhonemes.forEach((phoneme: string) => {\r\n        // Create div for button\r\n        const div = document.createElement('div');\r\n        div.style.display = \"inline-block\";\r\n        div.style.marginRight = \"10px\";\r\n\r\n        // Add div for button to the button div\r\n        buttonDiv.appendChild(div);\r\n        createApp(Button, {label: phoneme, id: \"fid_\" + phoneme}).mount(div);\r\n\r\n        // Get the button from the page\r\n        const btn = document.getElementById(\"fid_\" + phoneme);\r\n\r\n        // Get the table cell for guesses from the page\r\n        const guessesCell = document.getElementById(\"pTableRow_\" + fiRows.value);\r\n        if (btn === null || guessesCell === null) {\r\n          return\r\n        }\r\n\r\n        // Add button event listener\r\n        btn.addEventListener(\"click\", () => {\r\n          const bgColor = btn.style.background;\r\n          if (phoneme === playedPhoneme) {\r\n            btn.style.background = \"green\";\r\n            guessesCell.innerHTML += \"<span style='background: green; margin-right: 3px; padding: 2px'>\" + phoneme + \"</span>\";\r\n          } else {\r\n            btn.style.background = \"red\";\r\n            guessesCell.innerHTML += \"<span style='background: red; margin-right: 3px; padding: 2px'>\" + phoneme + \"</span>\";\r\n          }\r\n\r\n          // Log the identification\r\n          ActivityLogger.log_activity(\"phoneme\", playedPhoneme, phoneme)\r\n\r\n          setTimeout(() => {\r\n            btn.style.background = bgColor\r\n          }, 1000);\r\n        });\r\n      })\r\n    }\r\n\r\n    // Format gotten phonemes from backend.\r\n    const phonemes: { name: string }[] = [];\r\n    phonemeData.forEach((pho: string) => {\r\n      phonemes.push({name: pho})\r\n    })\r\n\r\n    // Return all variables\r\n    return {\r\n      phonemes,\r\n      selectedTrainPhonemes,\r\n      dropdownPhoneme,\r\n      fiRows,\r\n      raRows,\r\n\r\n      sendDropdownPhoneme,\r\n      sendRandomPhoneme,\r\n      sendForcedIdentification\r\n    }\r\n  },\r\n  created() {\r\n    document.title = \"HART Prototype - Phonemes\"\r\n  }\r\n})\r\n","import { render } from \"./Phonemes.vue?vue&type=template&id=990813ba&scoped=true&ts=true&class=temp\"\nimport script from \"./Phonemes.vue?vue&type=script&lang=ts\"\nexport * from \"./Phonemes.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\20174721\\\\Documents\\\\HART Software\\\\frontend\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-990813ba\"]])\n\nexport default __exports__","import { createVNode as _createVNode, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-d3f54052\")\n\n_pushScopeId(\"data-v-d3f54052\")\nconst _hoisted_1 = /*#__PURE__*/_createVNode(\"h1\", null, \"Words!\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"p\", null, \"In this panel you can configure the list by adding (or removing) word to (from) the preprogrammed list of words. Additionally, you can send any word you want to the microcontroller.\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Add word to list!\")\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Remove word from list!\")\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"Send word!\")\nconst _hoisted_6 = /*#__PURE__*/_createVNode(\"p\", null, \"Select (using the autocomplete function), the words that you would like to train on. Only words from the list (which can be configured above) can be used for training.\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createVNode(\"p\", null, \"By clicking the button, a word will be send to the microcontroller. You will then get to see three buttons representing words, and you will have to choose which one you felt.\", -1)\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"Forced identification!\")\nconst _hoisted_9 = /*#__PURE__*/_createVNode(\"div\", { id: \"forcedIdentificationButtons\" }, null, -1)\nconst _hoisted_10 = /*#__PURE__*/_createVNode(\"table\", { id: \"fi-answer-table\" }, [\n  /*#__PURE__*/_createVNode(\"tr\", null, [\n    /*#__PURE__*/_createVNode(\"th\", null, \"Round\"),\n    /*#__PURE__*/_createVNode(\"th\", null, \"Correct answer\"),\n    /*#__PURE__*/_createVNode(\"th\", null, \"Guessed answers\")\n  ])\n], -1)\nconst _hoisted_11 = /*#__PURE__*/_createVNode(\"p\", null, \"Type a sentence you want to send to the microcontroller and select a language that it is written in.\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createTextVNode(\"Send sentence!\")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId((_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) => {\n  const _component_AutoComplete = _resolveComponent(\"AutoComplete\")\n  const _component_Button = _resolveComponent(\"Button\")\n  const _component_Panel = _resolveComponent(\"Panel\")\n  const _component_Fieldset = _resolveComponent(\"Fieldset\")\n  const _component_InputText = _resolveComponent(\"InputText\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _hoisted_1,\n    _createVNode(_component_Panel, { header: \"Configure list of words, and send specific word\" }, {\n      default: _withId(() => [\n        _hoisted_2,\n        _createVNode(_component_AutoComplete, {\n          modelValue: _ctx.selectedWord,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_ctx.selectedWord = $event)),\n          dropdown: true,\n          suggestions: _ctx.filteredWords.value,\n          onComplete: _cache[2] || (_cache[2] = ($event: any) => (_ctx.searchWord($event))),\n          field: \"name\",\n          style: {\"margin-right\":\"10px\"}\n        }, null, 8, [\"modelValue\", \"suggestions\"]),\n        _createVNode(_component_Button, {\n          onClick: _cache[3] || (_cache[3] = ($event: any) => (_ctx.addWord())),\n          style: {\"padding\":\"1.1rem\",\"margin-right\":\"10px\"}\n        }, {\n          default: _withId(() => [\n            _hoisted_3\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_Button, {\n          onClick: _cache[4] || (_cache[4] = ($event: any) => (_ctx.removeWord())),\n          style: {\"padding\":\"1.1rem\",\"margin-right\":\"10px\"}\n        }, {\n          default: _withId(() => [\n            _hoisted_4\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_Button, {\n          onClick: _cache[5] || (_cache[5] = ($event: any) => (_ctx.sendACWord())),\n          style: {\"padding\":\"1.1rem\"}\n        }, {\n          default: _withId(() => [\n            _hoisted_5\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_Panel, { header: \"Selection based training\" }, {\n      default: _withId(() => [\n        _hoisted_6,\n        _createVNode(_component_AutoComplete, {\n          multiple: true,\n          modelValue: _ctx.selectedWords,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => (_ctx.selectedWords = $event)),\n          suggestions: _ctx.filteredWords.value,\n          dropdown: true,\n          onComplete: _cache[7] || (_cache[7] = ($event: any) => (_ctx.searchWord($event))),\n          field: \"name\",\n          class: \"p-shadow-2\",\n          style: {\"width\":\"100%\",\"margin-bottom\":\"10px\"}\n        }, null, 8, [\"modelValue\", \"suggestions\"]),\n        _createVNode(_component_Panel, { header: \"Forced identification\" }, {\n          default: _withId(() => [\n            _hoisted_7,\n            _createVNode(_component_Button, {\n              onClick: _cache[8] || (_cache[8] = ($event: any) => (_ctx.sendForcedIdentification())),\n              style: {\"padding\":\"1.2rem\"}\n            }, {\n              default: _withId(() => [\n                _hoisted_8\n              ]),\n              _: 1\n            }),\n            _hoisted_9,\n            _createVNode(_component_Fieldset, {\n              legend: \"Answers (history)\",\n              toggleable: true,\n              collapsed: true\n            }, {\n              default: _withId(() => [\n                _hoisted_10\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_Panel, { header: \"Send sentences\" }, {\n      default: _withId(() => [\n        _hoisted_11,\n        _createVNode(_component_InputText, {\n          type: \"text\",\n          modelValue: _ctx.inputSentence,\n          \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => (_ctx.inputSentence = $event)),\n          style: {\"width\":\"100%\",\"margin-bottom\":\"10px\"}\n        }, null, 8, [\"modelValue\"]),\n        _createVNode(_component_AutoComplete, {\n          modelValue: _ctx.selectedLanguage,\n          \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => (_ctx.selectedLanguage = $event)),\n          dropdown: true,\n          suggestions: _ctx.filteredLanguages.value,\n          placeholder: \"Select language\",\n          onComplete: _cache[11] || (_cache[11] = ($event: any) => (_ctx.searchLanguage($event))),\n          field: \"language\",\n          style: {\"margin-right\":\"10px\"}\n        }, null, 8, [\"modelValue\", \"suggestions\"]),\n        _createVNode(_component_Button, {\n          onClick: _cache[12] || (_cache[12] = ($event: any) => (_ctx.sendSentence())),\n          style: {\"padding\":\"1.1rem\",\"margin-right\":\"10px\"}\n        }, {\n          default: _withId(() => [\n            _hoisted_12\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n})","\r\nimport {createApp, defineComponent, ref} from \"vue\";\r\nimport {getRandom} from \"@/helpers/array.helper\";\r\nimport Button from \"primevue/button\";\r\nimport APIWrapper from \"@/backend.api\";\r\nimport ActivityLogger from \"@/helpers/logging\"\r\n\r\nexport default defineComponent({\r\n  name: 'Words',\r\n\r\n  setup: async () => {\r\n    const selectedWord = ref();\r\n    const selectedWords = ref([]);\r\n    const selectedLanguage = ref();\r\n    const inputSentence = ref();\r\n    const fiRows = ref(0);\r\n    const words = ref([\r\n      // 2 phoneme words\r\n      {name: \"see\"},\r\n      {name: \"me\"},\r\n      {name: \"tea\"},\r\n      {name: \"key\"},\r\n      {name: \"he\"},\r\n      {name: \"eat\"},\r\n      {name: \"saw\"},\r\n      {name: \"raw\"},\r\n\r\n      // 3 phoneme words\r\n      {name: \"meet\"}, // (also) meat\r\n      {name: \"hurt\"},\r\n      {name: \"heat\"},\r\n      {name: \"seat\"},\r\n      {name: \"rot\"},\r\n      {name: \"hot\"},\r\n      {name: \"hook\"},\r\n      {name: \"seek\"},\r\n      {name: \"took\"},\r\n      {name: \"cook\"},\r\n      {name: \"seem\"},\r\n      {name: \"meme\"},\r\n      {name: \"team\"},\r\n      {name: \"sought\"},\r\n\r\n      // 4 phoneme words\r\n      {name: \"treat\"},\r\n      {name: \"skirt\"},\r\n      {name: \"cost\"},\r\n      {name: \"straw\"},\r\n      {name: \"heart\"}, // (also) HART\r\n      {name: \"mask\"}, // (also) mosque\r\n      {name: \"scar\"},\r\n\r\n      // 5 phoneme words\r\n      {name: \"smart\"},\r\n\r\n      // 6 phoneme words\r\n      {name: \"retard\"},\r\n\r\n    ]);\r\n    const languages = ref([\r\n      {language: \"English\", short: \"en\"},\r\n      {language: \"French\", short: 'fr'},\r\n      {language: \"German\", short: 'de'},\r\n      {language: \"French\", short: 'fr'},\r\n      {language: \"Russian\", short: 'ru'}\r\n    ]);\r\n\r\n    let filteredWords = ref(words.value)\r\n    let filteredLanguages = ref(languages.value)\r\n\r\n    /**\r\n     * Function that filters the words list for all autocomplete input fields.\r\n     * @param event   The event emitted from the input field upon updating.\r\n     */\r\n    function searchWord(event: any) {\r\n      filteredWords.value = ref(words.value.map((w) => {\r\n        return w.name.includes(event.query) ? w : null\r\n      }).filter(w => !!w)) as any;\r\n    }\r\n\r\n    /**\r\n     * Function that filters the languages list for all autocomplete input fields.\r\n     * @param event   The event emitted from the input field upon updating.\r\n     */\r\n    function searchLanguage(event: any) {\r\n      filteredLanguages.value = ref(languages.value.map((w) => {\r\n        return w.language.includes(event.query) ? w : null\r\n      }).filter(w => !!w)) as any;\r\n    }\r\n\r\n    /**\r\n     * Function for sending a word to the arduino.\r\n     */\r\n    function sendACWord() {\r\n      if (selectedWord.value === undefined) {\r\n        alert(\"Please insert a word to send\");\r\n        return\r\n      }\r\n\r\n      if (typeof selectedWord.value !== \"string\") {\r\n        APIWrapper.sendWordsMicrocontroller({'words': [selectedWord.value.name]})\r\n      } else {\r\n        APIWrapper.sendWordsMicrocontroller({'words': [selectedWord.value]})\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function for executing forced identification behavior.\r\n     */\r\n    function sendForcedIdentification() {\r\n      // Check if words are selected. If no words are selected, alert user and return.\r\n      if (selectedWords.value.length === 0) {\r\n        alert(\"Please select words to train on\");\r\n        return;\r\n      }\r\n\r\n      // Get a set of random words from the selected words.\r\n      const randomWords = (selectedWords.value as any).map((w: {name: string}) => {return w.name});\r\n      const playedWord = getRandom(randomWords, 1)[0];\r\n\r\n      // Play chosen word on the microcontroller\r\n      APIWrapper.sendWordsMicrocontroller({'words': [playedWord]});\r\n\r\n      // Increase the number of forced identification rounds\r\n      fiRows.value++;\r\n\r\n      // Get div from page for placing buttons\r\n      const buttonDiv = document.getElementById(\"forcedIdentificationButtons\")\r\n      if (buttonDiv === null) {return;}\r\n\r\n      // empty button div\r\n      buttonDiv.innerHTML = '';\r\n\r\n      // Add explanation div\r\n      const textDiv = document.createElement('div');\r\n      textDiv.innerHTML = '<p>Which word was just played?</p>';\r\n      buttonDiv.appendChild(textDiv);\r\n\r\n      // Get the answer table\r\n      const pTable = document.getElementById(\"fi-answer-table\");\r\n      if (pTable === null) {return;}\r\n\r\n      // Create new row element for table\r\n      const row = document.createElement(\"tr\");\r\n      row.innerHTML = \"<td>\" + fiRows.value + \"</td><td>\" + playedWord\r\n          + \"</td><td id='fi-answer-table-row_\" + fiRows.value + \"'></td>\";\r\n      pTable.appendChild(row);\r\n\r\n      // For each of the words selected, create buttons and assign listeners to it.\r\n      randomWords.forEach((word: string) => {\r\n        // Create div for button\r\n        const div = document.createElement('div');\r\n        div.style.display = \"inline-block\";\r\n        div.style.marginRight = \"10px\";\r\n\r\n        // Add div for button to the page\r\n        buttonDiv.appendChild(div);\r\n        createApp(Button, {label: word, id: \"fid_\" + word}).mount(div);\r\n\r\n        // Get the button from the page and the table cell for guesses.\r\n        const btn = document.getElementById(\"fid_\" + word);\r\n        const guessesCell = document.getElementById(\"fi-answer-table-row_\" + fiRows.value);\r\n        if (btn === null || guessesCell === null) {return;}\r\n\r\n        // Add button event listener\r\n        btn.addEventListener(\"click\", () => {\r\n          const bgColor = btn.style.background;\r\n          if (word === playedWord) {\r\n            btn.style.background = \"green\";\r\n            guessesCell.innerHTML += \"<span style='background: green; margin-right: 3px; padding: 2px'>\" + word + \"</span>\";\r\n          } else {\r\n            btn.style.background = \"red\";\r\n            guessesCell.innerHTML += \"<span style='background: red; margin-right: 3px; padding: 2px'>\" + word + \"</span>\";\r\n          }\r\n\r\n          // Log the identification\r\n          ActivityLogger.log_activity(\"word\", playedWord, word)\r\n\r\n          setTimeout(() => {\r\n            btn.style.background = bgColor\r\n          }, 1000);\r\n        })\r\n      })\r\n    }\r\n\r\n    /**\r\n     * Function for sending written sentence to the arduino.\r\n     */\r\n    function sendSentence() {\r\n      if (selectedLanguage.value === undefined) {\r\n        alert(\"Please select a language in which the sentence is written.\");\r\n      }\r\n\r\n      if (inputSentence.value === undefined) {\r\n        alert(\"Please write a sentence that you would like to send.\");\r\n      }\r\n\r\n      APIWrapper.sendSentencesMicrocontroller({'sentences': [inputSentence.value], 'language': selectedLanguage.value.short});\r\n    }\r\n\r\n    /**\r\n     * Function for adding a word to the list of words.\r\n     */\r\n    function addWord() {\r\n      if (selectedWord.value === undefined) {\r\n        // If nothing typed, alert user.\r\n        alert(\"Please type a word first before inserting!\");\r\n      } else {\r\n        // Add word to list\r\n        alert(\"'\" + selectedWord.value + \"' was added to the list\");\r\n        words.value.push({name: selectedWord.value});\r\n        selectedWord.value = \"\";\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Function for removing a word from the list of words.\r\n     */\r\n    function removeWord() {\r\n      if (selectedWord.value === undefined) {\r\n        // If nothing typed, alert user\r\n        alert(\"Please type a word first before removing!\");\r\n      } else {\r\n        // Find word in list\r\n        const index = words.value.findIndex(o => {\r\n          return (o.name === selectedWord.value.name) || o.name === selectedWord.value\r\n        });\r\n\r\n        if (index === -1) {\r\n          // If not found, alert user\r\n          alert(\"Word not found in list, thus cannot be removed.\");\r\n        } else {\r\n          // Remove word from list.\r\n          alert(\"'\" + words.value[index].name + \"' was removed from the list\");\r\n          words.value.splice(index, 1);\r\n          selectedWord.value = \"\";\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      selectedWord,\r\n      selectedWords,\r\n      filteredWords,\r\n      words,\r\n      languages,\r\n      filteredLanguages,\r\n      selectedLanguage,\r\n      inputSentence,\r\n\r\n      searchWord,\r\n      searchLanguage,\r\n      sendACWord,\r\n      sendForcedIdentification,\r\n      sendSentence,\r\n      addWord,\r\n      removeWord,\r\n    }\r\n  },\r\n  created() {\r\n    document.title = \"HART Prototype - Words\"\r\n  }\r\n})\r\n","import { render } from \"./Words.vue?vue&type=template&id=d3f54052&scoped=true&ts=true\"\nimport script from \"./Words.vue?vue&type=script&lang=ts\"\nexport * from \"./Words.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\20174721\\\\Documents\\\\HART Software\\\\frontend\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d3f54052\"]])\n\nexport default __exports__","import { createVNode as _createVNode, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-4c57957c\")\n\n_pushScopeId(\"data-v-4c57957c\")\nconst _hoisted_1 = /*#__PURE__*/_createVNode(\"h1\", null, \"Audio!\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"p\", null, \"Select and upload a file you want to send to the microcontroller and select a language that it is spoken in.\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createVNode(\"br\", null, null, -1)\nconst _hoisted_4 = /*#__PURE__*/_createVNode(\"br\", null, null, -1)\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"Send File to Microcontroller\")\nconst _hoisted_6 = /*#__PURE__*/_createVNode(\"p\", null, \"In this panel, you can record some audio, select the language which you spoke and then send that for processing towards the microcontroller. Be aware, the compression on the audio is quite severe, so quality is not very good.\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"Record\")\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"Stop Recording\")\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"play\")\nconst _hoisted_10 = /*#__PURE__*/_createVNode(\"br\", null, null, -1)\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode()\nconst _hoisted_12 = /*#__PURE__*/_createVNode(\"br\", null, null, -1)\nconst _hoisted_13 = /*#__PURE__*/_createTextVNode(\"Send Audio!\")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId((_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) => {\n  const _component_AutoComplete = _resolveComponent(\"AutoComplete\")\n  const _component_Button = _resolveComponent(\"Button\")\n  const _component_Panel = _resolveComponent(\"Panel\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _hoisted_1,\n    _createVNode(_component_Panel, { header: \"Send audio file\" }, {\n      default: _withId(() => [\n        _hoisted_2,\n        _createVNode(\"input\", {\n          type: \"file\",\n          ref: \"fileInput\",\n          onChange: _cache[1] || (_cache[1] = ($event: any) => (_ctx.onFileSelected($event)))\n        }, null, 544),\n        _hoisted_3,\n        _createVNode(_component_AutoComplete, {\n          modelValue: _ctx.selectedLanguage1,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_ctx.selectedLanguage1 = $event)),\n          dropdown: true,\n          suggestions: _ctx.filteredLanguages.value,\n          placeholder: \"Select language\",\n          onComplete: _cache[3] || (_cache[3] = ($event: any) => (_ctx.searchLanguage($event))),\n          field: \"language\",\n          style: {\"margin-bottom\":\"10px\",\"margin-top\":\"10px\"}\n        }, null, 8, [\"modelValue\", \"suggestions\"]),\n        _hoisted_4,\n        _createVNode(_component_Button, {\n          onClick: _cache[4] || (_cache[4] = ($event: any) => (_ctx.sendFile())),\n          style: {\"margin-right\":\"10px\"}\n        }, {\n          default: _withId(() => [\n            _hoisted_5\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_Panel, { header: \"Record Audio\" }, {\n      default: _withId(() => [\n        _hoisted_6,\n        _createVNode(_component_Button, {\n          onClick: _cache[5] || (_cache[5] = ($event: any) => (_ctx.startRecord())),\n          type: \"button\",\n          id: \"button_record\",\n          class: \"p-button\",\n          style: {\"margin-right\":\"10px\"}\n        }, {\n          default: _withId(() => [\n            _hoisted_7\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_Button, {\n          onClick: _cache[6] || (_cache[6] = ($event: any) => (_ctx.stopRecord())),\n          type: \"button\",\n          id: \"button_stop\",\n          class: \"p-button-danger\",\n          style: {\"margin-right\":\"10px\"}\n        }, {\n          default: _withId(() => [\n            _hoisted_8\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_Button, {\n          id: \"play-btn\",\n          class: \"p-button\",\n          disabled: \"\"\n        }, {\n          default: _withId(() => [\n            _hoisted_9\n          ]),\n          _: 1\n        }),\n        _hoisted_10,\n        _createVNode(_component_AutoComplete, {\n          modelValue: _ctx.selectedLanguage2,\n          \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => (_ctx.selectedLanguage2 = $event)),\n          dropdown: true,\n          suggestions: _ctx.filteredLanguages.value,\n          placeholder: \"Select language\",\n          onComplete: _cache[8] || (_cache[8] = ($event: any) => (_ctx.searchLanguage($event))),\n          field: \"language\",\n          style: {\"margin-bottom\":\"10px\",\"margin-top\":\"10px\"}\n        }, null, 8, [\"modelValue\", \"suggestions\"]),\n        _hoisted_11,\n        _hoisted_12,\n        _createVNode(_component_Button, {\n          onClick: _cache[9] || (_cache[9] = ($event: any) => (_ctx.sendRecording())),\n          id: \"send-btn\",\n          class: \"p-button\",\n          disabled: \"\"\n        }, {\n          default: _withId(() => [\n            _hoisted_13\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64))\n})","\r\nimport {defineComponent, ref} from 'vue';\r\nimport APIWrapper from \"@/backend.api\";\r\n\r\nexport default defineComponent({\r\n  name: 'Audio',\r\n  setup: async () => {\r\n    let uploadedFile: any = undefined; // Stores the uploaded file\r\n    const selectedLanguage1 = ref(); // Stores the selected language for file upload\r\n    const selectedLanguage2 = ref(); // Stores the selected language for recording\r\n    let recorder: any; // Stores the MediaRecorder object\r\n    let mime: any; // Stores the mime type of the recording\r\n    let audio: any = undefined; // Stores the audio of the recording\r\n\r\n    // Set supported languages.\r\n    const languages = ref([\r\n      {language: \"Dutch\", short: \"nl\"},\r\n      {language: \"English\", short: \"en\"},\r\n      {language: \"French\", short: 'fr'},\r\n      {language: \"German\", short: 'de'},\r\n      {language: \"Russian\", short: 'ru'}\r\n    ]);\r\n\r\n    let filteredLanguages = ref(languages.value) // Stores the filtered languages upon searching among languages.\r\n\r\n    /**\r\n     * Function for sending the uploaded file to the microcontroller.\r\n     */\r\n    function sendFile() {\r\n      // Check if language is selected\r\n      if (selectedLanguage1.value === undefined) {\r\n        alert(\"Please select the spoken language\");\r\n        return\r\n      }\r\n\r\n      // Check if file is uploaded\r\n      if (uploadedFile === undefined) {\r\n        alert(\"Please upload an audio file\");\r\n        return\r\n      }\r\n\r\n      // Send file to the microcontroller\r\n      APIWrapper.sendAudioFile(uploadedFile, {\r\n        source_language: selectedLanguage1.value.short,\r\n        target_language: \"en\",\r\n        type: \"audio/flac\"\r\n      })\r\n    }\r\n\r\n    /**\r\n     * Function for sending the recorded audio to the microcontroller.\r\n     */\r\n    function sendRecording() {\r\n      // Check if language is selected.\r\n      if (selectedLanguage2.value === undefined) {\r\n        return alert(\"Please select the spoken language\");\r\n      }\r\n\r\n      // Check if audio is recorded.\r\n      if (audio === undefined) {\r\n        return alert(\"Record some audio first!\")\r\n      }\r\n\r\n      // Send audio to microcontroller\r\n      APIWrapper.sendAudioFile(audio,\r\n          {source_language: selectedLanguage2.value.short, target_language: \"en\", type: mime});\r\n    }\r\n\r\n    /**\r\n     * On change event for the file upload button\r\n     */\r\n    function onFileSelected(event: any) {\r\n      uploadedFile = event.target.files[0]\r\n      console.log(uploadedFile);\r\n    }\r\n\r\n    /**\r\n     * Function that filters the languages list for all autocomplete input fields.\r\n     * @param event   The event emitted from the input field upon updating.\r\n     */\r\n    function searchLanguage(event: any) {\r\n      filteredLanguages.value = ref(languages.value.map((w) => {\r\n        return w.language.toLowerCase().includes(event.query.toLowerCase()) ? w : null\r\n      }).filter(w => !!w)) as any;\r\n    }\r\n\r\n    /**\r\n     * Function for starting a recording from the browser.\r\n     */\r\n    function startRecord() {\r\n      navigator.mediaDevices.getUserMedia({audio: true})\r\n          .then(recordStream).catch(console.error);\r\n    }\r\n\r\n    /**\r\n     * Function for recording audio via the browser.\r\n     * @param stream    MediaStream of the recording.\r\n     */\r\n    function recordStream(stream: any) {\r\n      // List for storing data\r\n      const items: any[] = [];\r\n\r\n      // Check which mimetypes is supported.\r\n      // @ts-ignore\r\n      mime = ['audio/webm', 'audio/ogg'].filter(MediaRecorder.isTypeSupported)[0];\r\n\r\n      // Initializing the recorder using the mimetype.\r\n      // @ts-ignore\r\n      recorder = new MediaRecorder(stream, {mimeType: mime});\r\n\r\n      // Empty the collection when starting recording.\r\n      recorder.addEventListener('start', () => {\r\n        items.length = 0;\r\n      });\r\n\r\n      // If there is data available, store it.\r\n      // @ts-ignore\r\n      recorder.ondataavailable = (e) => {\r\n        items.push(e.data);\r\n      };\r\n\r\n      // On stop, stop recording and finalize recorded data.\r\n      recorder.onstop = () => {\r\n        stream.getTracks().forEach((s: any) => s.stop());\r\n        finalize(items)\r\n      }\r\n\r\n      // @ts-ignore\r\n      recorder.start();\r\n    }\r\n\r\n    /**\r\n     * Function for stopping the recording.\r\n     */\r\n    function stopRecord() {\r\n      // @ts-ignore\r\n      recorder.stop();\r\n    }\r\n\r\n    /**\r\n     * Finalizes the recorded data.\r\n     * @param chunks    Recorded data chunks.\r\n     */\r\n    function finalize(chunks: any) {\r\n      // Store the audio as a blob using the mimetype\r\n      audio = new Blob(chunks, {type: mime})\r\n\r\n      // Initialize audio playback.\r\n      playMedia(audio);\r\n    }\r\n\r\n    /**\r\n     * Creates playback functionality based on recorded data.\r\n     * @param blob    Recorded data.\r\n     */\r\n    function playMedia(blob: Blob) {\r\n      // Initialize AudioContext.\r\n      const ctx = new AudioContext();\r\n      const fileReader = new FileReader();\r\n      // @ts-ignore\r\n      fileReader.onload = () => ctx.decodeAudioData(fileReader.result)\r\n          .then(buf => {\r\n            const playbtn = document.getElementById(\"play-btn\");\r\n            // @ts-ignore\r\n            playbtn.onclick = () => {\r\n              const source = ctx.createBufferSource();\r\n              source.buffer = buf;\r\n              source.connect(ctx.destination);\r\n              source.start(0);\r\n            };\r\n            // @ts-ignore\r\n            playbtn.disabled = false;\r\n\r\n            const send_btn = document.getElementById(\"send-btn\")\r\n            // @ts-ignore\r\n            send_btn.disabled = false;\r\n          });\r\n      fileReader.readAsArrayBuffer(blob);\r\n    }\r\n\r\n    return {\r\n      selectedLanguage1,\r\n      selectedLanguage2,\r\n      filteredLanguages,\r\n      languages,\r\n\r\n      sendFile,\r\n      onFileSelected,\r\n      searchLanguage,\r\n\r\n      startRecord,\r\n      stopRecord,\r\n      sendRecording,\r\n    }\r\n  },\r\n  created() {\r\n    document.title = \"HART Prototype - Audio\"\r\n  }\r\n})\r\n","import { render } from \"./Audio.vue?vue&type=template&id=4c57957c&scoped=true&ts=true\"\nimport script from \"./Audio.vue?vue&type=script&lang=ts\"\nexport * from \"./Audio.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Users\\\\20174721\\\\Documents\\\\HART Software\\\\frontend\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4c57957c\"]])\n\nexport default __exports__","<template>\r\n  <h1>Settings</h1>\r\n  <Button @click=\"darkThemeSwitch\">Switch Themes!</Button>\r\n\r\n</template>\r\n\r\n<script>\r\nimport {defineComponent} from \"vue\";\r\nimport {ThemeChanger} from \"@/helpers/darkmode.helper\";\r\n\r\nexport default defineComponent({\r\n  name: \"Settings\",\r\n  created() {\r\n    document.title = \"HART Prototype - Settings\"\r\n  },\r\n  setup() {\r\n    const themeChanger = new ThemeChanger();\r\n\r\n    return {themeChanger}\r\n  },\r\n  methods: {\r\n    darkThemeSwitch() {\r\n      this.themeChanger.darkThemeSwitch();\r\n    }\r\n  },\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","export class ThemeChanger {\r\n\r\n    constructor() {\r\n        // document.styleSheets[0].disabled = true;\r\n        // document.styleSheets[1].disabled = false;\r\n        //\r\n        // document.styleSheets[2].disabled = true;\r\n        // document.styleSheets[3].disabled = false;\r\n    }\r\n\r\n    darkThemeSwitch() {\r\n        const stylesheets = document.styleSheets;\r\n        stylesheets[0].disabled = !stylesheets[0].disabled;\r\n        stylesheets[1].disabled = !stylesheets[1].disabled;\r\n\r\n        stylesheets[2].disabled = !stylesheets[2].disabled;\r\n        stylesheets[3].disabled = !stylesheets[3].disabled;\r\n    }\r\n}\r\n","import { render } from \"./Settings.vue?vue&type=template&id=4a6d696a&scoped=true\"\nimport script from \"./Settings.vue?vue&type=script&lang=js\"\nexport * from \"./Settings.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\20174721\\\\Documents\\\\HART Software\\\\frontend\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a6d696a\"]])\n\nexport default __exports__","import {createWebHistory, createRouter} from \"vue-router\";\r\nimport Home from \"@/components/Home.vue\";\r\nimport Documentation from \"@/components/Documentation.vue\";\r\nimport Phonemes from \"@/components/Phonemes.vue\";\r\nimport Words from \"@/components/Words.vue\";\r\nimport Audio from \"@/components/Audio.vue\";\r\nimport Settings from \"@/components/Settings.vue\";\r\n\r\nconst routes = [\r\n    {\r\n        path: \"/\",\r\n        name: \"Home\",\r\n        component: Home\r\n    },\r\n    {\r\n        path: \"/documentation\",\r\n        name: \"Documentation\",\r\n        component: Documentation\r\n    },\r\n    {\r\n        path: \"/phonemes\",\r\n        name: \"Phonemes\",\r\n        component: Phonemes,\r\n    },\r\n    {\r\n        path: \"/words\",\r\n        name: \"Words\",\r\n        component: Words,\r\n    },\r\n    {\r\n        path: \"/audio\",\r\n        name: \"Audio\",\r\n        component: Audio\r\n    },\r\n    {\r\n        path: \"/settings\",\r\n        name: \"Settings\",\r\n        component: Settings,\r\n    }]\r\n\r\nexport const router = createRouter({\r\n    history: createWebHistory(),\r\n    routes,\r\n})\r\n","import '@babel/polyfill'\r\nimport 'mutationobserver-shim'\r\nimport { createApp } from 'vue'\r\nimport App from './App.vue'\r\n\r\nimport PrimeVue from 'primevue/config'\r\nimport Button from \"primevue/button\";\r\n\r\n// import 'primevue/resources/themes/mdc-dark-deeppurple/theme.css'\r\nimport 'primevue/resources/themes/mdc-light-deeppurple/theme.css';\r\n\r\n// import './assets/layout/dark-mode.css'\r\nimport './assets/layout/light-mode.css'\r\n\r\nimport 'primevue/resources/primevue.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\nimport TabMenu from \"primevue/tabmenu\";\r\nimport {router} from \"@/router/router\";\r\nimport Checkbox from \"primevue/checkbox\";\r\nimport Dropdown from \"primevue/dropdown\";\r\nimport Panel from \"primevue/panel\";\r\nimport Fieldset from \"primevue/fieldset\";\r\nimport InputText from 'primevue/inputtext';\r\nimport AutoComplete from \"primevue/autocomplete\";\r\n\r\nimport './assets/layout/reset.css';\r\nimport './assets/layout/style.css';\r\n\r\nconst app = createApp(App);\r\n\r\napp.use(PrimeVue, {ripple: true});\r\napp.use(router);\r\n\r\napp.component('Button', Button);\r\napp.component('TabMenu', TabMenu);\r\napp.component('Checkbox', Checkbox);\r\napp.component('Dropdown', Dropdown);\r\napp.component('Panel', Panel);\r\napp.component('Fieldset', Fieldset);\r\napp.component('AutoComplete', AutoComplete);\r\napp.component('InputText', InputText);\r\n\r\napp.mount('#app')\r\n"],"sourceRoot":""}